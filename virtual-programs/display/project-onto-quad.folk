proc intrinsicsToList {intrinsics} {
    dict with intrinsics {
        return [list $fx $fy $s $cx $cy $k1 $k2]
    }
}

When display /display/ has intrinsics /intr/ &\
     tag /tag/ has quad /q/ {
    # TODO: ensure tag is on the right display
    set cameraName [lindex $q 0 1]
    set tagToCamera [lindex $q 0 2 2]
    set cameraR [dict get $tagToCamera R]
    set cameraT [dict get $tagToCamera t]
    
    set cameraToDisplayR [lindex [dict get $::space::changers $cameraName "display $display"] 2]
    set displayT [space change $cameraName "display $display" $cameraT]
    set displayR [matmul $cameraToDisplayR $cameraR]

    set intrinsicsList [intrinsicsToList $intr]
    set RTransposed [transpose $displayR] ;# column format to grab i hat and j hat
    set projectArgs [list {*}$intrinsicsList [lindex $RTransposed 0] [lindex $RTransposed 1] $displayT]

    Claim tag $tag has projected arguments $projectArgs
}
